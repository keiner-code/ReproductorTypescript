{"mappings":"MASM,YAAY;iBAGD,CAAC;QAHlB,IAuBC,CAtBG,SAAS,GAAe,CAAC,CAAC;QAGtB,KAAK,CAAC,EAAE,GAAqB,QAAQ,CAAC,aAAa,CAAC,CAAQ;QAC5D,EAAE,CAAC,gBAAgB,CAAC,CAAO,YAAM,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK;QACxB,CAAC;IACL,CAAC;IAED,SAAS,CAAC,QAAkB,EAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ;IAChC,CAAC;IACD,WAAW,CAAC,QAAkB,EAAC,CAAC;QAC5B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,GAAG,GAAG,CAAC;YAC1C,MAAM,CAAC,GAAG,KAAK,QAAQ;QAC3B,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,IAAQ,EAAC,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC,QAAQ,GAAI,QAAQ,CAAC,MAAM,CAAC,IAAI;;IAC3D,CAAC;;MAGC,YAAY;iBAED,CAAC;QACV,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;IAC7C,CAAC;IAED,MAAM,CAAC,IAAS,EAAC,CAAC;QACd,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI;IAC5B,CAAC;;AAGL,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY;AAC9B,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY;AAEhC,KAAK,CAAC,SAAS,CAAC,OAAO;AAEvB,UAAU,KAAO,KAAK,CAAC,WAAW,CAAC,OAAO;EAAE,IAAI","sources":["ejercicios/observer/index.ts"],"sourcesContent":["interface Observer{\r\n    update: (data:any) => void;\r\n}\r\n\r\ninterface Subject{\r\n    subscribe: (observer: Observer) =>void,\r\n    unsubscribe: (observer: Observer) =>void,\r\n}\r\n\r\nclass BitcoinPrice implements Subject{\r\n    observers: Observer[] = [];\r\n\r\n    constructor(){\r\n        const el: HTMLInputElement = document.querySelector('#value');\r\n        el.addEventListener('input',() =>{\r\n            this.notify(el.value)\r\n        });\r\n    }\r\n\r\n    subscribe(observer: Observer){\r\n        this.observers.push(observer)\r\n    }\r\n    unsubscribe(observer: Observer){\r\n        const index = this.observers.findIndex(obs =>{\r\n            return obs === observer;\r\n        });\r\n        this.observers.splice(index,1);\r\n    }\r\n\r\n    notify(data:any){\r\n        this.observers.forEach(observer => observer.update(data))\r\n    }\r\n}\r\n\r\nclass PriceDisplay implements Observer{\r\n    private el: HTMLElement;\r\n    constructor(){\r\n        this.el = document.querySelector('#price');\r\n    }\r\n\r\n    update(data: any){\r\n        this.el.innerHTML = data;\r\n    }\r\n}\r\n\r\nconst value = new BitcoinPrice();\r\nconst display = new PriceDisplay();\r\n\r\nvalue.subscribe(display);\r\n\r\nsetTimeout(() => value.unsubscribe(display),5000);"],"names":[],"version":3,"file":"index.feff0034.js.map","sourceRoot":"/__parcel_source_root/"}