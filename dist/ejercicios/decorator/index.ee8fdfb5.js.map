{"mappings":"MAAM,KAAK;gBAIK,KAAuB,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAG;QAC7C,YAAY,CAAC,SAAS,GAAG,CAAa;QACtC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,EAC3C,IAAI,CAAC,KAAK,CAAC,WAAW;QAE1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAO,YAAM,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ;YACb,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAE;QACjD,CAAC;IACL,CAAC;IACD,QAAQ,GAAE,CAAC;IAAA,CAAC;;SAGP,sBAAsB,CAAC,MAAY,EAAQ,CAAC;IACjD,GAAG,CAAC,QAAQ,GAAG,MAAK,CAAC,QAAQ;IAC7B,MAAK,CAAC,QAAQ,GAAG,QAAQ,GAAE,CAAC;QACxB,QAAQ;QACR,GAAG,CAAC,KAAK,GAAG,MAAK,CAAC,KAAK,CAAC,KAAK;QAC7B,EAAE,GAAE,KAAK,EACL,MAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAW;IAErC,CAAC;IACD,MAAM,CAAC,MAAK;AAChB,CAAC;SAEQ,mBAAmB,CAAC,MAAY,EAAQ,CAAC;IAC9C,GAAG,CAAC,QAAQ,GAAG,MAAK,CAAC,QAAQ;IAC7B,MAAK,CAAC,QAAQ,GAAG,QAAQ,GAAE,CAAC;QACxB,QAAQ;QACR,GAAG,CAAC,KAAK,GAAG,MAAK,CAAC,KAAK,CAAC,KAAK;QAC7B,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,CAAG,QAAM,EAAE,EACxB,MAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAmB;IAE7C,CAAC;IACD,MAAM,CAAC,MAAK;AAChB,CAAC;AAED,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAQ;AACrD,mBAAmB,CAAC,sBAAsB,CAAC,KAAK","sources":["ejercicios/decorator/index.ts"],"sourcesContent":["class Field{\r\n    errors: string[];\r\n    input: HTMLInputElement;\r\n\r\n    constructor(input: HTMLInputElement){\r\n        this.input = input;\r\n        this.errors = [];\r\n\r\n        let errorMessage = document.createElement('p');\r\n        errorMessage.className = 'text-danger';\r\n        this.input.parentNode.insertBefore(errorMessage, \r\n            this.input.nextSibling);\r\n\r\n        this.input.addEventListener('input', ()=>{\r\n            this.errors = [];\r\n            this.validate();\r\n            errorMessage.innerText = this.errors[0] || '';\r\n        });\r\n    }\r\n    validate(){}\r\n}\r\n\r\nfunction RequiredFieldDecorator(field: Field): Field{\r\n    let validate = field.validate;\r\n    field.validate = function(){\r\n        validate();\r\n        let value = field.input.value;\r\n        if(!value){\r\n            field.errors.push('Requerido');\r\n        }\r\n    }\r\n    return field;\r\n}\r\n\r\nfunction EmailFieldDecorator(field: Field): Field{\r\n    let validate = field.validate;\r\n    field.validate = function(){\r\n        validate();\r\n        let value = field.input.value;\r\n        if(value.indexOf('@') === -1){\r\n            field.errors.push('Debe Ser Un email');\r\n        }\r\n    }\r\n    return field;\r\n}\r\n\r\nlet field = new Field(document.querySelector('#email'));\r\nEmailFieldDecorator(RequiredFieldDecorator(field));"],"names":[],"version":3,"file":"index.ee8fdfb5.js.map","sourceRoot":"/__parcel_source_root/"}